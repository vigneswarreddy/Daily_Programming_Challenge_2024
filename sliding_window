# Day 23
from collections import deque
def sliding_window_maximum(arr, k):
    if not arr or k == 0:
        return []
    n = len(arr)
    if k == 1:
        return arr  
    result = []
    dq = deque()  
    for i in range(n):
        if dq and dq[0] < i - k + 1:
            dq.popleft()
        while dq and arr[dq[-1]] < arr[i]:
            dq.pop()
        dq.append(i)
        if i >= k - 1:
            result.append(arr[dq[0]])  
    return result

# Test Cases
arr1 = [1, 3, -1, -3, 5, 3, 6, 7]
k1 = 3
print(sliding_window_maximum(arr1, k1)) 

arr2 = [1, 5, 3, 2, 4, 6]
k2 = 3
print(sliding_window_maximum(arr2, k2))  

arr3 = [1, 2, 3, 4]
k3 = 2
print(sliding_window_maximum(arr3, k3))  

arr4 = [7, 7, 7, 7]
k4 = 1
print(sliding_window_maximum(arr4, k4))  

arr5 = [9]
k5 = 1
print(sliding_window_maximum(arr5, k5))
